<!--
Add security domain to the JBosss AS standalone.xml:

<security-domain name="web-tests" cache-type="default">
	<authentication>
		<login-module code="UsersRoles" flag="required"/>
	</authentication>
</security-domain>

or use CLI (jboss-cli.sh):

connect
/subsystem=security/security-domain=web-tests:add(cache-type=default)
/subsystem=security/security-domain=web-tests/authentication=classic:add(login-modules=[{"code"=>"UsersRoles", "flag"=>"required"}]) {allow-resource-service-restart=true}
-->
<jboss-web 
		xmlns="http://www.jboss.com/xml/ns/javaee"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.jboss.com/xml/ns/javaee http://www.jboss.org/j2ee/schema/jboss-web_7_1.xsd"
		version="7.1">
           
<!-- jboss-web 
		xmlns="http://www.jboss.com/xml/ns/javaee"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.jboss.com/xml/ns/javaee http://www.jboss.org/j2ee/schema/jboss-web_10_0.xsd"
		version="10.0" -->


	<security-domain flushOnSessionInvalidation="true">web-tests</security-domain>
	<disable-audit>false</disable-audit>
<!--
	<context-root>secured-webapp</context-root>
	<valve>
		<class-name>org.picketlink.identity.federation.bindings.tomcat.sp.ServiceProviderAuthenticator</class-name>
	</valve>
	<use-jboss-authorization>true</use-jboss-authorization>
-->
<!--
WildFly 10:
    <proactive-authentication>false</proactive-authentication>
 -->
</jboss-web>
